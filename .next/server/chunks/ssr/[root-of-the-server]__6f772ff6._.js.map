{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 27, "column": 0}, "map": {"version":3,"sources":["file://D%3A/A.minorproject/jsm_mock_interview_platform/mock_interview_platform/lib/actions/auth.action.ts"],"sourcesContent":["// \"use server\";\r\n\r\n// import { db, auth } from \"@/firebase/admin\"; // Adjusted the path to match the correct location\r\n// import { cookies } from \"next/headers\";\r\n\r\n// const ONE_WEEK = 60 * 60 * 24 * 7; // One week in milliseconds\r\n\r\n// export async function signUp(params: SignUpParams){\r\n//     const {uid, name, email} = params;\r\n\r\n//     try{\r\n//          const userRecord = await db.collection('users').doc(uid).get()\r\n   \r\n//          if (!userRecord.exists) {\r\n             \r\n//             return {\r\n//                 success: false,\r\n//                 message: 'User alreasdy exists.Please sign in instead.'\r\n//             }\r\n//          }\r\n\r\n//          await db.collection('users').doc(uid).set({\r\n\r\n//             name,\r\n//             email\r\n//          })\r\n          \r\n//          return {\r\n//             success: true,\r\n//             message: \"Account created successfully. Please sign in.\"\r\n\r\n//          }\r\n\r\n   \r\n//         }  catch (e:any) {\r\n        \r\n//         console.error(\"Error creating a user\", e);\r\n\r\n//         if(e.code === 'auth/email-already-in-use'){\r\n\r\n//             return{\r\n//                 success: false,\r\n//                 message: \"Email already in use.\"\r\n//             }\r\n//         }\r\n\r\n//         return{\r\n//             success: false,\r\n//             message: \"Lodhe dusri id daal na \",\r\n//         }\r\n        \r\n//     }\r\n// }\r\n\r\n// export async function signIn(params: SignInParams){\r\n//     const {email, idToken} = params;\r\n\r\n//     try{\r\n           \r\n//         const userRecord = await auth.getUserByEmail(email);\r\n        \r\n//         if (!userRecord) {\r\n//             return {\r\n//                 success: false,\r\n//                 message: \"User does not exist. Please sign up.\"\r\n//             };\r\n//         }\r\n\r\n//         await setSessionCookie(idToken);\r\n\r\n//     } catch(e){\r\n//         console.error(\"Sign in failed:\", e);\r\n\r\n//     }\r\n\r\n//     return{\r\n//         success: false,\r\n//         message: \"Failed to log in an account.\"\r\n//     }\r\n// }\r\n\r\n// export async function setSessionCookie(idToken: string){\r\n//     const cookieStore = await cookies();\r\n//     const sessionCookie = await auth.createSessionCookie(idToken, { expiresIn: ONE_WEEK * 1000, })\r\n    \r\n//     cookieStore.set('session', sessionCookie, {\r\n//         maxAge: ONE_WEEK ,\r\n//         httpOnly: true,\r\n//         secure: process.env.NODE_ENV === 'production',\r\n//         path: '/',\r\n//         sameSite: 'lax',\r\n//     })\r\n\r\n// } \r\n\r\n\"use server\";\r\n\r\nimport { getFirestore } from \"firebase-admin/firestore\";\r\nconst db = getFirestore();\r\nimport { getAuth } from \"firebase-admin/auth\"; // Import auth from firebase-admin\r\nconst auth = getAuth(); // Initialize auth\r\nimport { cookies } from \"next/headers\";\r\n\r\n// Session duration (1 week)\r\nconst SESSION_DURATION = 60 * 60 * 24 * 7;\r\n\r\n// Set session cookie\r\nexport async function setSessionCookie(idToken: string) {\r\n  const cookieStore = await cookies();\r\n\r\n  // Create session cookie\r\n  const sessionCookie = await auth.createSessionCookie(idToken, {\r\n    expiresIn: SESSION_DURATION * 1000, // milliseconds\r\n  });\r\n\r\n  // Set cookie in the browser\r\n  cookieStore.set(\"session\", sessionCookie, {\r\n    maxAge: SESSION_DURATION,\r\n    httpOnly: true,\r\n    secure: process.env.NODE_ENV === \"production\",\r\n    path: \"/\",\r\n    sameSite: \"lax\",\r\n  });\r\n}\r\n\r\nexport async function signUp(params: SignUpParams) {\r\n  const { uid, name, email } = params;\r\n\r\n  try {\r\n    // check if user exists in db\r\n    const userRecord = await db.collection(\"users\").doc(uid).get();\r\n    if (userRecord.exists)\r\n      return {\r\n        success: false,\r\n        message: \"User already exists. Please sign in.\",\r\n      };\r\n\r\n    // save user to db\r\n    await db.collection(\"users\").doc(uid).set({\r\n      name,\r\n      email,\r\n      // profileURL,\r\n      // resumeURL,\r\n    });\r\n\r\n    return {\r\n      success: true,\r\n      message: \"Account created successfully. Please sign in.\",\r\n    };\r\n  } catch (error: any) {\r\n    console.error(\"Error creating user:\", error);\r\n\r\n    // Handle Firebase specific errors\r\n    if (error.code === \"auth/email-already-exists\") {\r\n      return {\r\n        success: false,\r\n        message: \"This email is already in use\",\r\n      };\r\n    }\r\n\r\n    return {\r\n      success: false,\r\n      message: \"Failed to create account. Please try again.\",\r\n    };\r\n  }\r\n}\r\n\r\nexport async function signIn(params: SignInParams) {\r\n  const { email, idToken } = params;\r\n\r\n  try {\r\n    const userRecord = await auth.getUserByEmail(email);\r\n    if (!userRecord)\r\n      return {\r\n        success: false,\r\n        message: \"User does not exist. Create an account.\",\r\n      };\r\n\r\n    await setSessionCookie(idToken);\r\n  } catch (error: any) {\r\n    console.log(\"\");\r\n\r\n    return {\r\n      success: false,\r\n      message: \"Failed to log into account. Please try again.\",\r\n    };\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 199, "column": 0}, "map": {"version":3,"sources":["file://D%3A/A.minorproject/jsm_mock_interview_platform/mock_interview_platform/.next-internal/server/app/%28auth%29/sign-up/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {signIn as '40e3352e6b45d1a74be815a12b29d69536c585faf9'} from 'ACTIONS_MODULE0'\nexport {signUp as '40836d58e84760212e4e6e7adccbc9afca64ff385d'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 283, "column": 0}, "map": {"version":3,"sources":["file://D%3A/A.minorproject/jsm_mock_interview_platform/mock_interview_platform/app/components/AuthForm.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/components/AuthForm.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/components/AuthForm.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA+R,GAC5T,6DACA","debugId":null}},
    {"offset": {"line": 297, "column": 0}, "map": {"version":3,"sources":["file://D%3A/A.minorproject/jsm_mock_interview_platform/mock_interview_platform/app/components/AuthForm.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/components/AuthForm.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/components/AuthForm.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA2Q,GACxS,yCACA","debugId":null}},
    {"offset": {"line": 311, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 321, "column": 0}, "map": {"version":3,"sources":["file://D%3A/A.minorproject/jsm_mock_interview_platform/mock_interview_platform/app/%28auth%29/sign-up/page.tsx"],"sourcesContent":["import AuthForm from '@/app/components/AuthForm';\r\nimport React from 'react';\r\n\r\nconst Page = ()=> {\r\n    return <AuthForm type=\"sign-up\" />\r\n}\r\nexport default Page;"],"names":[],"mappings":";;;;AAAA;;;AAGA,MAAM,OAAO;IACT,qBAAO,8OAAC,8HAAA,CAAA,UAAQ;QAAC,MAAK;;;;;;AAC1B;uCACe","debugId":null}}]
}