{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/A.minorproject/jsm_mock_interview_platform/mock_interview_platform/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file://D%3A/A.minorproject/jsm_mock_interview_platform/mock_interview_platform/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 80, "column": 0}, "map": {"version":3,"sources":["file://D%3A/A.minorproject/jsm_mock_interview_platform/mock_interview_platform/constants/index.ts"],"sourcesContent":["// import React from \"react\";\n// import { CreateAssistantDTO } from \"@vapi-ai/web/dist/api\";\n// import { z } from \"zod\";\n\n\nexport const mappings = {\n  \"react.js\": \"react\",\n  reactjs: \"react\",\n  react: \"react\",\n  \"next.js\": \"nextjs\",\n  nextjs: \"nextjs\",\n  next: \"nextjs\",\n  \"vue.js\": \"vuejs\",\n  vuejs: \"vuejs\",\n  vue: \"vuejs\",\n  \"express.js\": \"express\",\n  expressjs: \"express\",\n  express: \"express\",\n  \"node.js\": \"nodejs\",\n  nodejs: \"nodejs\",\n  node: \"nodejs\",\n  mongodb: \"mongodb\",\n  mongo: \"mongodb\",\n  mongoose: \"mongoose\",\n  mysql: \"mysql\",\n  postgresql: \"postgresql\",\n  sqlite: \"sqlite\",\n  firebase: \"firebase\",\n  docker: \"docker\",\n  kubernetes: \"kubernetes\",\n  aws: \"aws\",\n  azure: \"azure\",\n  gcp: \"gcp\",\n  digitalocean: \"digitalocean\",\n  heroku: \"heroku\",\n  photoshop: \"photoshop\",\n  \"adobe photoshop\": \"photoshop\",\n  html5: \"html5\",\n  html: \"html5\",\n  css3: \"css3\",\n  css: \"css3\",\n  sass: \"sass\",\n  scss: \"sass\",\n  less: \"less\",\n  tailwindcss: \"tailwindcss\",\n  tailwind: \"tailwindcss\",\n  bootstrap: \"bootstrap\",\n  jquery: \"jquery\",\n  typescript: \"typescript\",\n  ts: \"typescript\",\n  javascript: \"javascript\",\n  js: \"javascript\",\n  \"angular.js\": \"angular\",\n  angularjs: \"angular\",\n  angular: \"angular\",\n  \"ember.js\": \"ember\",\n  emberjs: \"ember\",\n  ember: \"ember\",\n  \"backbone.js\": \"backbone\",\n  backbonejs: \"backbone\",\n  backbone: \"backbone\",\n  nestjs: \"nestjs\",\n  graphql: \"graphql\",\n  \"graph ql\": \"graphql\",\n  apollo: \"apollo\",\n  webpack: \"webpack\",\n  babel: \"babel\",\n  \"rollup.js\": \"rollup\",\n  rollupjs: \"rollup\",\n  rollup: \"rollup\",\n  \"parcel.js\": \"parcel\",\n  parceljs: \"parcel\",\n  npm: \"npm\",\n  yarn: \"yarn\",\n  git: \"git\",\n  github: \"github\",\n  gitlab: \"gitlab\",\n  bitbucket: \"bitbucket\",\n  figma: \"figma\",\n  prisma: \"prisma\",\n  redux: \"redux\",\n  flux: \"flux\",\n  redis: \"redis\",\n  selenium: \"selenium\",\n  cypress: \"cypress\",\n  jest: \"jest\",\n  mocha: \"mocha\",\n  chai: \"chai\",\n  karma: \"karma\",\n  vuex: \"vuex\",\n  \"nuxt.js\": \"nuxt\",\n  nuxtjs: \"nuxt\",\n  nuxt: \"nuxt\",\n  strapi: \"strapi\",\n  wordpress: \"wordpress\",\n  contentful: \"contentful\",\n  netlify: \"netlify\",\n  vercel: \"vercel\",\n  \"aws amplify\": \"amplify\",\n};\n\n// export const interviewer: CreateAssistantDTO = {\n//   name: \"Interviewer\",\n//   firstMessage:\n//     \"Hello! Thank you for taking the time to speak with me today. I'm excited to learn more about you and your experience.\",\n//   transcriber: {\n//     provider: \"deepgram\",\n//     model: \"nova-2\",\n//     language: \"en\",\n//   },\n//   voice: {\n//     provider: \"11labs\",\n//     voiceId: \"sarah\",\n//     stability: 0.4,\n//     similarityBoost: 0.8,\n//     speed: 0.9,\n//     style: 0.5,\n//     useSpeakerBoost: true,\n//   },\n//   model: {\n//     provider: \"openai\",\n//     model: \"gpt-4\",\n//     messages: [\n//       {\n//         role: \"system\",\n//         content: `You are a professional job interviewer conducting a real-time voice interview with a candidate. Your goal is to assess their qualifications, motivation, and fit for the role.\n\n// Interview Guidelines:\n// Follow the structured question flow:\n// {{questions}}\n\n// Engage naturally & react appropriately:\n// Listen actively to responses and acknowledge them before moving forward.\n// Ask brief follow-up questions if a response is vague or requires more detail.\n// Keep the conversation flowing smoothly while maintaining control.\n// Be professional, yet warm and welcoming:\n\n// Use official yet friendly language.\n// Keep responses concise and to the point (like in a real voice interview).\n// Avoid robotic phrasing—sound natural and conversational.\n// Answer the candidate’s questions professionally:\n\n// If asked about the role, company, or expectations, provide a clear and relevant answer.\n// If unsure, redirect the candidate to HR for more details.\n\n// Conclude the interview properly:\n// Thank the candidate for their time.\n// Inform them that the company will reach out soon with feedback.\n// End the conversation on a polite and positive note.\n\n\n// - Be sure to be professional and polite.\n// - Keep all your responses short and simple. Use official language, but be kind and welcoming.\n// - This is a voice conversation, so keep your responses short, like in a real conversation. Don't ramble for too long.`,\n//       },\n//     ],\n//   },\n// };\n\n// export const feedbackSchema = z.object({\n//   totalScore: z.number(),\n//   categoryScores: z.tuple([\n//     z.object({\n//       name: z.literal(\"Communication Skills\"),\n//       score: z.number(),\n//       comment: z.string(),\n//     }),\n//     z.object({\n//       name: z.literal(\"Technical Knowledge\"),\n//       score: z.number(),\n//       comment: z.string(),\n//     }),\n//     z.object({\n//       name: z.literal(\"Problem Solving\"),\n//       score: z.number(),\n//       comment: z.string(),\n//     }),\n//     z.object({\n//       name: z.literal(\"Cultural Fit\"),\n//       score: z.number(),\n//       comment: z.string(),\n//     }),\n//     z.object({\n//       name: z.literal(\"Confidence and Clarity\"),\n//       score: z.number(),\n//       comment: z.string(),\n//     }),\n//   ]),\n//   strengths: z.array(z.string()),\n//   areasForImprovement: z.array(z.string()),\n//   finalAssessment: z.string(),\n// });\nexport const interviewCovers = [\n  \"/adobe.png\",\n  \"/amazon.png\",\n  \"/facebook.png\",\n  \"/hostinger.png\",\n  \"/pinterest.png\",\n  \"/quora.png\",\n  \"/reddit.png\",\n  \"/skype.png\",\n  \"/spotify.png\",\n  \"/telegram.png\",\n  \"/tiktok.png\",\n  \"/yahoo.png\",\n];\n\nexport const dummyInterviews: Interview[] = [\n  {\n    id: \"1\",\n    userId: \"user1\",\n    role: \"Frontend Developer\",\n    type: \"Technical\",\n    techstack: [\"React\", \"TypeScript\", \"Next.js\", \"Tailwind CSS\"],\n    level: \"Junior\",\n    questions: [\"What is React?\"],\n    finalized: false,\n    createdAt: \"2024-03-15T10:00:00Z\",\n  },\n  {\n    id: \"2\",\n    userId: \"user1\",\n    role: \"Full Stack Developer\",\n    type: \"Mixed\",\n    techstack: [\"Node.js\", \"Express\", \"MongoDB\", \"React\"],\n    level: \"Senior\",\n    questions: [\"What is Node.js?\"],\n    finalized: false,\n    createdAt: \"2024-03-14T15:30:00Z\",\n  },\n];\n"],"names":[],"mappings":"AAAA,6BAA6B;AAC7B,8DAA8D;AAC9D,2BAA2B;;;;;;AAGpB,MAAM,WAAW;IACtB,YAAY;IACZ,SAAS;IACT,OAAO;IACP,WAAW;IACX,QAAQ;IACR,MAAM;IACN,UAAU;IACV,OAAO;IACP,KAAK;IACL,cAAc;IACd,WAAW;IACX,SAAS;IACT,WAAW;IACX,QAAQ;IACR,MAAM;IACN,SAAS;IACT,OAAO;IACP,UAAU;IACV,OAAO;IACP,YAAY;IACZ,QAAQ;IACR,UAAU;IACV,QAAQ;IACR,YAAY;IACZ,KAAK;IACL,OAAO;IACP,KAAK;IACL,cAAc;IACd,QAAQ;IACR,WAAW;IACX,mBAAmB;IACnB,OAAO;IACP,MAAM;IACN,MAAM;IACN,KAAK;IACL,MAAM;IACN,MAAM;IACN,MAAM;IACN,aAAa;IACb,UAAU;IACV,WAAW;IACX,QAAQ;IACR,YAAY;IACZ,IAAI;IACJ,YAAY;IACZ,IAAI;IACJ,cAAc;IACd,WAAW;IACX,SAAS;IACT,YAAY;IACZ,SAAS;IACT,OAAO;IACP,eAAe;IACf,YAAY;IACZ,UAAU;IACV,QAAQ;IACR,SAAS;IACT,YAAY;IACZ,QAAQ;IACR,SAAS;IACT,OAAO;IACP,aAAa;IACb,UAAU;IACV,QAAQ;IACR,aAAa;IACb,UAAU;IACV,KAAK;IACL,MAAM;IACN,KAAK;IACL,QAAQ;IACR,QAAQ;IACR,WAAW;IACX,OAAO;IACP,QAAQ;IACR,OAAO;IACP,MAAM;IACN,OAAO;IACP,UAAU;IACV,SAAS;IACT,MAAM;IACN,OAAO;IACP,MAAM;IACN,OAAO;IACP,MAAM;IACN,WAAW;IACX,QAAQ;IACR,MAAM;IACN,QAAQ;IACR,WAAW;IACX,YAAY;IACZ,SAAS;IACT,QAAQ;IACR,eAAe;AACjB;AA6FO,MAAM,kBAAkB;IAC7B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAEM,MAAM,kBAA+B;IAC1C;QACE,IAAI;QACJ,QAAQ;QACR,MAAM;QACN,MAAM;QACN,WAAW;YAAC;YAAS;YAAc;YAAW;SAAe;QAC7D,OAAO;QACP,WAAW;YAAC;SAAiB;QAC7B,WAAW;QACX,WAAW;IACb;IACA;QACE,IAAI;QACJ,QAAQ;QACR,MAAM;QACN,MAAM;QACN,WAAW;YAAC;YAAW;YAAW;YAAW;SAAQ;QACrD,OAAO;QACP,WAAW;YAAC;SAAmB;QAC/B,WAAW;QACX,WAAW;IACb;CACD","debugId":null}},
    {"offset": {"line": 241, "column": 0}, "map": {"version":3,"sources":["file://D%3A/A.minorproject/jsm_mock_interview_platform/mock_interview_platform/public/utils.ts"],"sourcesContent":["import { interviewCovers, mappings } from \"@/constants\";\nimport { clsx, type ClassValue } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n\nconst techIconBaseURL = \"https://cdn.jsdelivr.net/gh/devicons/devicon/icons\";\n\nconst normalizeTechName = (tech: string) => {\n  const key = tech.toLowerCase().replace(/\\.js$/, \"\").replace(/\\s+/g, \"\");\n  return mappings[key as keyof typeof mappings];\n};\n\nconst checkIconExists = async (url: string) => {\n  try {\n    const response = await fetch(url, { method: \"HEAD\" });\n    return response.ok; // Returns true if the icon exists\n  } catch {\n    return false;\n  }\n};\n\nexport const getTechLogos = async (techArray: string[]) => {\n  const logoURLs = techArray.map((tech) => {\n    const normalized = normalizeTechName(tech);\n    return {\n      tech,\n      url: `${techIconBaseURL}/${normalized}/${normalized}-original.svg`,\n    };\n  });\n\n  const results = await Promise.all(\n    logoURLs.map(async ({ tech, url }) => ({\n      tech,\n      url: (await checkIconExists(url)) ? url : \"/tech.svg\",\n    }))\n  );\n\n  return results;\n};\n\nexport const getRandomInterviewCover = () => {\n  const randomIndex = Math.floor(Math.random() * interviewCovers.length);\n  return `/covers${interviewCovers[randomIndex]}`;\n};\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB;AAEA,MAAM,kBAAkB;AAExB,MAAM,oBAAoB,CAAC;IACzB,MAAM,MAAM,KAAK,WAAW,GAAG,OAAO,CAAC,SAAS,IAAI,OAAO,CAAC,QAAQ;IACpE,OAAO,kHAAA,CAAA,WAAQ,CAAC,IAA6B;AAC/C;AAEA,MAAM,kBAAkB,OAAO;IAC7B,IAAI;QACF,MAAM,WAAW,MAAM,MAAM,KAAK;YAAE,QAAQ;QAAO;QACnD,OAAO,SAAS,EAAE,EAAE,kCAAkC;IACxD,EAAE,OAAM;QACN,OAAO;IACT;AACF;AAEO,MAAM,eAAe,OAAO;IACjC,MAAM,WAAW,UAAU,GAAG,CAAC,CAAC;QAC9B,MAAM,aAAa,kBAAkB;QACrC,OAAO;YACL;YACA,KAAK,GAAG,gBAAgB,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,aAAa,CAAC;QACpE;IACF;IAEA,MAAM,UAAU,MAAM,QAAQ,GAAG,CAC/B,SAAS,GAAG,CAAC,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,GAAK,CAAC;YACrC;YACA,KAAK,AAAC,MAAM,gBAAgB,OAAQ,MAAM;QAC5C,CAAC;IAGH,OAAO;AACT;AAEO,MAAM,0BAA0B;IACrC,MAAM,cAAc,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,kHAAA,CAAA,kBAAe,CAAC,MAAM;IACrE,OAAO,CAAC,OAAO,EAAE,kHAAA,CAAA,kBAAe,CAAC,YAAY,EAAE;AACjD","debugId":null}},
    {"offset": {"line": 294, "column": 0}, "map": {"version":3,"sources":["file://D%3A/A.minorproject/jsm_mock_interview_platform/mock_interview_platform/app/components/InterviewCard.tsx"],"sourcesContent":["\r\n\"use client\"\r\nimport React from \"react\";\r\nimport dayjs from \"dayjs\";\r\nimport Image from \"next/image\";\r\nimport { getRandomInterviewCover } from \"@/public/utils\";\r\nimport { interviewCovers } from '@/constants';\r\nimport { Button } from \"@/components/ui/button\";\r\nimport  Link  from \"next/link\";\r\n\r\nconst InterviewCard = ({ interviewId, userId, role, type, techStack, createdAt }: InterviewCardProps) => {\r\n    const feedback = null as Feedback | null;\r\n    const normalizedType = /mix/gi.test(type)? 'Mixed' : type;\r\n    const formattedDate = dayjs(feedback?.createdAt || createdAt || Date.now()).format('MMM D, YYYY');\r\n\r\n    return (\r\n        <div className=\"card-border w-[360px] max-sm:w-full min-h-96\">\r\n            <div className=\"card-interview\">\r\n                <div>\r\n                    <div className=\"absolute top-0 right-0 w-fit px-4 py-2 rounded-bl-lg bg-light-600\">\r\n                        <p className=\"badge-text\">{normalizedType}</p>\r\n                    </div>\r\n                    <Image\r\n                        src={getRandomInterviewCover()}\r\n                        alt=\"cover image\"\r\n                        width={90}\r\n                        height={90}\r\n                        className=\"rounded-full object-fit size-[90px]\"\r\n                    />\r\n                    <h3 className=\"mt-5 capitalize\">{role} Interview</h3>\r\n\r\n\r\n                    <div className=\"flex flex-col gap-5 mt-3\">\r\n                        <div className=\"flex flex-row gap-2\">\r\n                            <Image src=\"\\calendar.svg\" alt=\"calendar\"\r\n                            width={22} height={22} />\r\n                            <p>{formattedDate}</p>\r\n\r\n                            <div className=\"flex flex-row gap-2\">\r\n                                <Image src=\"/star.svg\" alt=\"star\" width={22} height={22} />\r\n                                <p>{feedback?.totalScore || '---'}/100</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <p className=\"line-clamp-2 mt-5\">\r\n                            {feedback?.finalAssessment || \"Your haven&apos;t taken the interview yet. Take it now to improve your skills.\"}\r\n                        </p>\r\n                    </div>\r\n\r\n                    <div className=\"flex flex-row justify-between mt-6\">\r\n                        <p> Tech Icons</p>\r\n                        <Button className =\"btn-primary\">\r\n                            <Link href={feedback\r\n                            ?`/interview/${interviewId}/feedback`\r\n                            :`/interview/${interviewId}`\r\n                            }>\r\n                                {feedback? 'Check Feedback' : 'View Interview'}\r\n                            </Link>\r\n                        </Button>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default InterviewCard;\r\n\r\n\r\n\r\n\r\n\r\n\r\n// \"user client\"\r\n// import React from \"react\";\r\n// import dayjs from \"dayjs\";\r\n// import Image from \"next/image\";\r\n// import { getRandomInterviewCover } from \"@/public/utils\";\r\n// import { interviewCovers } from '@/constants';\r\n\r\n// const InterviewCard = ({ interviewId, userId, role, type,techStack, createdAt\r\n\r\n//   }:InterviewCardProps) =>{\r\n//     const feedback = null as Feedback | null;\r\n//    const normalizedType = /mix/gi.test(type)? 'Mixed' : type;\r\n//    const formattedDate  = dayjs(feedback?.createdAt || createdAt || Date.now()).format('MMM D, YYYY');\r\n// const InterviewCard = ({ interviewId, userId, role, type, techstack, createdAt }: InterviewCardProps) => {\r\n//   const feedback = null as Feedback | null;\r\n//   const normalizedType = /mix/gi.test(type) ? 'Mixed' : type;\r\n//   const formattedDate = dayjs(feedback?.createdAt || createdAt || Date.now()).format('MMM D, YYYY');\r\n\r\n//   return (\r\n//     <div className=\"card-border w-[360px] max-sm:w-full min-h-96\">\r\n//       <div className=\"card-interview\">\r\n//         <div>\r\n//           <div className=\"absolute top-0 right-0 w-fit px-4 py-2 rounded-bl-lg bg-light-600\">\r\n//             <p className=\"badge-text\">{normalizedType}</p>\r\n//           </div>\r\n//           <Image\r\n//             src={getRandomInterviewCover()}\r\n//             alt=\"cover image\"\r\n//             width={90}\r\n//             height={90}\r\n//             className=\"rounded-full object-fit size-[90px]\"\r\n//           />\r\n//           <h3 className=\"mt-5 capitalize\">\r\n//             {role} Interview\r\n//           </h3>\r\n\r\n//           <div className = \"flex flex-row gap-5 mt-3\">\r\n//             <div className=\"flex flex-row gap-2\">\r\n//                 <Image src=\"/calender.svg\" alt=\"calendar\"\r\n//                 width={22} height={22} />\r\n//                 <p>{formattedDate}</p>\r\n\r\n//                 <div className=\"flex flex-row gap-2\">\r\n//                     <Image src=\"/star.svg\" alt=\"star\" width={22} height={22} />\r\n//                     <p>{feedback?.totalScore || '---'}/100</p>\r\n//                 </div>\r\n\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//       <div className=\"mt-4\">\r\n//         <p>Role: {role}</p>\r\n//         <p>Tech Stack: {techstack.join(', ')}</p>\r\n//         <p>Date: {formattedDate}</p>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n//     return (\r\n\r\n//         <div className=\"card-border w-[360px] max-sm:w-full min-h-96\">\r\n//             <div className=\"card-interview\">\r\n//                 <div>\r\n//                     <div className=\"absolute top-0 right-0 w-fit px-4 py-2 rounded-bl-lg bg-light-600\">\r\n//                         <p className=\"badge-text\">\r\n//                             {normalizedType}\r\n//                         </p>\r\n//                     </div>\r\n//                     <Image src={getRandomInterviewCover()} alt=\"cover image\"\r\n//                      width={90} height={90} className=\"rounded-full object-fit size-[90px] \" />\r\n//                 </div>\r\n//             </div>     \r\n//         </div>\r\n//     )\r\n// }\r\n\r\n\r\n\r\n\r\n// export default InterviewCard;\r\n\r\n// \"use client\"\r\n// import React from \"react\";\r\n// import dayjs from \"dayjs\";\r\n// import Image from \"next/image\";\r\n// import { getRandomInterviewCover } from \"@/public/utils\";\r\n\r\n// interface InterviewCardProps {\r\n//   interviewId: string;\r\n//   userId: string;\r\n//   role: string;\r\n//   type: string;\r\n//   techStack?: string[]; // Make it optional\r\n//   createdAt: Date;\r\n// }\r\n\r\n// interface Feedback {\r\n//   createdAt?: Date;\r\n//   totalScore?: number;\r\n// }\r\n\r\n// const InterviewCard = ({ \r\n//   interviewId, \r\n//   userId, \r\n//   role, \r\n//   type, \r\n//   techStack = [], // Default empty array\r\n//   createdAt \r\n// }: InterviewCardProps) => {\r\n//   const feedback = null as Feedback | null;\r\n//   const normalizedType = /mix/gi.test(type) ? 'Mixed' : type;\r\n//   const formattedDate = dayjs(feedback?.createdAt || createdAt || Date.now()).format('MMM D, YYYY');\r\n\r\n//   return (\r\n//     <div className=\"card-border w-[360px] max-sm:w-full min-h-96\">\r\n//       {/* ... other card content ... */}\r\n      \r\n//       <div className=\"mt-4\">\r\n//         <p>Role: {role}</p>\r\n//         <p>Tech Stack: {techStack?.join(', ') || 'Not specified'}</p>\r\n//         <p>Date: {formattedDate}</p>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default InterviewCard;\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 594, "column": 0}, "map": {"version":3,"sources":["file://D%3A/A.minorproject/jsm_mock_interview_platform/mock_interview_platform/app/%28root%29/page.tsx"],"sourcesContent":["\"use client\"\nimport { Button } from '@/components/ui/button';\nimport Link from 'next/link';\nimport React from 'react'\nimport Image from 'next/image';\nimport { dummyInterviews } from '@/constants';\nimport InterviewCard from '../components/InterviewCard';\n\nconst Page = () => {\n    return (\n       <>\n           <section className='card-cta'>\n            <div className='flex flex-col gap-6 max-w-lg'>\n                <h2>Get Interview-Ready with AI-Powered Practice & Feedback</h2>\n                <p className='text-lg'>\n                    Practice on real interview questions & get instant feedback\n                </p>\n                \n                <Button asChild className='btn-primary max-sm:w-full'>\n                    <Link href='/interview' className='w-full'>Start an Interview</Link>\n                </Button>\n            </div>\n\n            <Image \n                src=\"/robot.png\" // Remove /public from path\n                alt=\"robo-dude\" \n                width={400} \n                height={400}\n                priority // If this image is above the fold\n            />\n           </section>\n\n           <section className='flex flex-col gap-6 mt-8'>\n            <h2>Your Interviews</h2>  \n              \n              <div className='interviews-section'>\n                     {dummyInterviews.map((interview) => (\n                        <InterviewCard key={interview.id} {...interview} />\n                     ))}\n\n                     {/* <p>You  haven&apos;t taken any interviews yet</p> */}\n              </div>\n           </section>\n\n           <section className='flex flex-col gap-6 mt-8'>\n            <h2>Take an Interview</h2>  \n              \n              <div className='interviews-section'>\n              {dummyInterviews.map((interview) => (\n                        <InterviewCard key={interview.id} {...interview} />\n                     ))}\n\n              </div>\n           </section>\n       </>\n    )\n}\nexport default Page;"],"names":[],"mappings":";;;;AACA;AACA;AAEA;AACA;AACA;AANA;;;;;;;AAQA,MAAM,OAAO;IACT,qBACG;;0BACI,8OAAC;gBAAQ,WAAU;;kCAClB,8OAAC;wBAAI,WAAU;;0CACX,8OAAC;0CAAG;;;;;;0CACJ,8OAAC;gCAAE,WAAU;0CAAU;;;;;;0CAIvB,8OAAC,2HAAA,CAAA,SAAM;gCAAC,OAAO;gCAAC,WAAU;0CACtB,cAAA,8OAAC,4JAAA,CAAA,UAAI;oCAAC,MAAK;oCAAa,WAAU;8CAAS;;;;;;;;;;;;;;;;;kCAInD,8OAAC,6HAAA,CAAA,UAAK;wBACF,KAAI,aAAa,2BAA2B;;wBAC5C,KAAI;wBACJ,OAAO;wBACP,QAAQ;wBACR,QAAQ;;;;;;;;;;;;0BAIb,8OAAC;gBAAQ,WAAU;;kCAClB,8OAAC;kCAAG;;;;;;kCAEF,8OAAC;wBAAI,WAAU;kCACP,kHAAA,CAAA,kBAAe,CAAC,GAAG,CAAC,CAAC,0BACnB,8OAAC,mIAAA,CAAA,UAAa;gCAAqB,GAAG,SAAS;+BAA3B,UAAU,EAAE;;;;;;;;;;;;;;;;0BAO7C,8OAAC;gBAAQ,WAAU;;kCAClB,8OAAC;kCAAG;;;;;;kCAEF,8OAAC;wBAAI,WAAU;kCACd,kHAAA,CAAA,kBAAe,CAAC,GAAG,CAAC,CAAC,0BACZ,8OAAC,mIAAA,CAAA,UAAa;gCAAqB,GAAG,SAAS;+BAA3B,UAAU,EAAE;;;;;;;;;;;;;;;;;;AAOxD;uCACe","debugId":null}}]
}